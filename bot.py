import os
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram.error import NetworkError
import asyncio
import os

TOKEN = os.getenv("TELEGRAM_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º!")

if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    application = Application.builder()\
        .token(TOKEN)\
        .read_timeout(30)\  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
        .write_timeout(30)\
        .connect_timeout(30)\
        .pool_timeout(30)\
        .build()
    
    application.add_handler(CommandHandler("start", start))
    
    # –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏
    try:
        print("üü¢ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–µ—Ç–∏...")
        application.run_polling(
            poll_interval=1.0,
            timeout=30,
            drop_pending_updates=True
        )
    except NetworkError as e:
        print(f"üî¥ –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: {e}")
    except Exception as e:
        print(f"üî¥ –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    