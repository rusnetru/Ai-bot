import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram.error import NetworkError
import requests
import asyncio

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
NEWS_API_KEY = os.getenv("NEWS_API_KEY")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")

async def news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        url = f"https://newsapi.org/v2/top-headlines?country=us&pageSize=3&apiKey={NEWS_API_KEY}"
        response = requests.get(url, timeout=10).json()
        
        if response.get("articles"):
            for article in response["articles"][:3]:
                await update.message.reply_text(
                    f"üì∞ *{article['title']}*\n\n{article['url']}",
                    parse_mode="Markdown"
                )
    except:
        await update.message.reply_text("üì≠ –ù–æ–≤–æ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
    app = Application.builder()\
        .token(TELEGRAM_TOKEN)\
        .read_timeout(30)\
        .write_timeout(30)\
        .connect_timeout(30)\
        .build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("news", news))
    
    # –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    try:
        app.run_polling(
            poll_interval=1.0,
            timeout=30,
            drop_pending_updates=True
        )
    except NetworkError:
        print("üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–∑-–∑–∞ —Å–µ—Ç–µ–≤–æ–π –æ—à–∏–±–∫–∏")
    except Exception as e:
        print(f"üî¥ –û—à–∏–±–∫–∞: {e}")